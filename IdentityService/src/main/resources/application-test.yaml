spring:
  application:
    name: IDENTITY-SERVICE
  boot:
    message: Hello, Identity Service, Spring Cloud Bus (Test Environment)

  config:
    import: optional:configserver:http://config-server:8888

  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:123456}
    url: jdbc:postgresql://${DATABASE_HOST:postgres}:${DATABASE_PORT:5432}/identity_service

  jpa:
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO:update}

  data:
    redis:
      port: 6379
      host: ${SPRING_DATA_REDIS_HOST:redis}

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://registry-service:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true

logging:
  level:
    org.springframework.cloud.config: DEBUG
    com.netflix.discovery: DEBUG

jwt:
  secret-key: ${JWT_SECRET_KEY}

resilience4j:
  circuitbreaker:
    instances:
      IDENTITY-SERVICE:
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 4000ms
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        waitDurationInOpenState: 5000ms
  retry:
    instances:
      IDENTITY-SERVICE:
        maxAttempts: 3
        waitDuration: 1000ms
  ratelimiter:
    instances:
      identityService:
        limitForPeriod: 500
        limitRefreshPeriod: 1s
        timeoutDuration: 500ms

sub-domain: example.com

google:
  client-id: 441587123979-qds882ebt12bna4t4pldj9ausd2udpu2.apps.googleusercontent.com
  secret-key: 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
  redirect-uri: http://localhost:4200/oauth2/callback/google